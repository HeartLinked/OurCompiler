Start parsing...
Parse success!
CompUnitAST { CompUnitAST { CompUnitAST { FuncDefAST { FuncTypeAST { int }, half, (FuncFParamsAST { FuncFParamAST { BTypeAST { int }, b }, FuncFParamAST { BTypeAST { int }, x }, FuncFParamAST { BTypeAST { int }, y },  }) BlockAST { BlockItemAST { StmtAST { Exp { LOrExp { LAndExp { EqExp { RelExp { AddExp { AddExp { MulExp { UnaryExp { PrimaryExp { Lval { x } } } } } + MulExp { UnaryExp { PrimaryExp {  1  } } } } } } } } } } } } }FuncDefAST { FuncTypeAST { void }, half1, (FuncFParamsAST { FuncFParamAST { BTypeAST { int }, c }, FuncFParamAST { BTypeAST { int }, x }, FuncFParamAST { BTypeAST { int }, y },  }) BlockAST {  } } }FuncDefAST { FuncTypeAST { int }, main, (FuncFParamsAST { FuncFParamAST { BTypeAST { int }, b },  }) BlockAST { BlockItemAST { DeclAST { VarDeclAST { BTypeAST { int }, VarDefAST { a, InitValAST { Exp { LOrExp { LAndExp { EqExp { RelExp { AddExp { MulExp { UnaryExp { PrimaryExp {  10  } } } } } } } } } } } } } }, BlockItemAST { StmtAST { Exp { LOrExp { LAndExp { EqExp { RelExp { AddExp { MulExp { UnaryExp { half FuncRParams { Exp { LOrExp { LAndExp { EqExp { RelExp { AddExp { MulExp { UnaryExp { PrimaryExp {  1  } } } } } } } } }, FuncRParams { Exp { LOrExp { LAndExp { EqExp { RelExp { AddExp { MulExp { UnaryExp { PrimaryExp {  2  } } } } } } } } }, FuncRParams { Exp { LOrExp { LAndExp { EqExp { RelExp { AddExp { MulExp { UnaryExp { PrimaryExp { Lval { a } } } } } } } } } }, FuncRParams { Exp { LOrExp { LAndExp { EqExp { RelExp { AddExp { AddExp { MulExp { UnaryExp { PrimaryExp { Lval { a } } } } } + MulExp { UnaryExp { PrimaryExp {  1  } } } } } } } } },  } } } } } } } } } } } } } } } } } }

fun @half(%b_0_T62: i32, %x_1_2Xu: i32, %y_2_NpH: i32): i32 {
%entry_0:
   @b_0_T62 = alloc i32
   store %b_0_T62, @b_0_T62
   @x_1_2Xu = alloc i32
   store %x_1_2Xu, @x_1_2Xu
   @y_2_NpH = alloc i32
   store %y_2_NpH, @y_2_NpH

   %0 = load @x_1_2Xu
   %1 = add %0, 1
   ret %1
}

fun @half1(%c_3_hqD: i32, %x_4_AWg: i32, %y_5_GrW: i32): {
%entry_1:
   @c_3_hqD = alloc i32
   store %c_3_hqD, @c_3_hqD
   @x_4_AWg = alloc i32
   store %x_4_AWg, @x_4_AWg
   @y_5_GrW = alloc i32
   store %y_5_GrW, @y_5_GrW
   ret
}

fun @main(%b_6_Ria: i32): i32 {
%entry_2:
   @b_6_Ria = alloc i32
   store %b_6_Ria, @b_6_Ria

   @a = alloc i32
   store 10, @a

   %3 = load @a
   %4 = load @a
   %5 = add %4, 1
   %2 = call @half(1, 2, %3, %5)
   ret %2
}


当前时间：2023-05-22 14:40:41
