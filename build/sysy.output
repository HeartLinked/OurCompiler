语法

    0 $accept: CompUnit $end

    1 CompUnit: FuncDef
    2         | CompUnit2

    3 CompUnit2: FuncDef FuncDef
    4          | CompUnit2 FuncDef

    5 Decl: ConstDecl
    6     | VarDecl

    7 ConstDecl: CONST BType ConstDefList ';'

    8 ConstDefList: ConstDef
    9             | ConstDef ',' ConstDefList

   10 BType: INT

   11 ConstDef: IDENT '=' ConstInitVal

   12 ConstInitVal: ConstExp

   13 VarDecl: BType VarDefList ';'

   14 VarDefList: VarDef
   15           | VarDef ',' VarDefList

   16 VarDef: IDENT
   17       | IDENT '=' InitVal

   18 InitVal: Exp

   19 FuncDef: FuncType IDENT '(' ')' Block
   20        | FuncType IDENT '(' FuncFParams ')' Block

   21 FuncFParams: FuncFParam
   22            | FuncFParam ',' FuncFParams

   23 FuncFParam: BType IDENT

   24 FuncType: INT
   25         | VOID

   26 Block: '{' BlockItemList '}'
   27      | '{' '}'

   28 BlockItemList: BlockItem
   29              | BlockItem BlockItemList

   30 BlockItem: Decl
   31          | Stmt

   32 Stmt: open_statement
   33     | closed_statement

   34 open_statement: IF '(' Exp ')' Stmt
   35               | IF '(' Exp ')' closed_statement ELSE open_statement
   36               | WHILE '(' Exp ')' open_statement

   37 closed_statement: IF '(' Exp ')' closed_statement ELSE closed_statement
   38                 | WHILE '(' Exp ')' closed_statement
   39                 | LVal '=' Exp ';'
   40                 | Exp ';'
   41                 | ';'
   42                 | Block
   43                 | RETURN Exp ';'
   44                 | BREAK ';'
   45                 | CONTINUE ';'

   46 Exp: LOrExp

   47 LVal: IDENT

   48 PrimaryExp: '(' Exp ')'
   49           | LVal
   50           | Number

   51 Number: INT_CONST

   52 UnaryExp: PrimaryExp
   53         | UnaryOp UnaryExp
   54         | IDENT '(' FuncRParams ')'
   55         | IDENT '(' ')'

   56 FuncRParams: Exp
   57            | Exp ',' FuncRParams

   58 UnaryOp: '+'
   59        | '-'
   60        | '!'

   61 MulExp: UnaryExp
   62       | MulExp '*' UnaryExp
   63       | MulExp '/' UnaryExp
   64       | MulExp '%' UnaryExp

   65 AddExp: MulExp
   66       | AddExp '+' MulExp
   67       | AddExp '-' MulExp

   68 RelExp: AddExp
   69       | RelExp '<' AddExp
   70       | RelExp '>' AddExp
   71       | RelExp LE AddExp
   72       | RelExp GE AddExp

   73 EqExp: RelExp
   74      | EqExp EQ RelExp
   75      | EqExp NE RelExp

   76 LAndExp: EqExp
   77        | LAndExp AND EqExp

   78 LOrExp: LAndExp
   79       | LOrExp OR LAndExp

   80 ConstExp: Exp


终结语词，附有它们出现处的规则

    $end (0) 0
    '!' (33) 60
    '%' (37) 64
    '(' (40) 19 20 34 35 36 37 38 48 54 55
    ')' (41) 19 20 34 35 36 37 38 48 54 55
    '*' (42) 62
    '+' (43) 58 66
    ',' (44) 9 15 22 57
    '-' (45) 59 67
    '/' (47) 63
    ';' (59) 7 13 39 40 41 43 44 45
    '<' (60) 69
    '=' (61) 11 17 39
    '>' (62) 70
    '{' (123) 26 27
    '}' (125) 26 27
    error (256)
    INT (258) 10 24
    RETURN (259) 43
    AND (260) 77
    OR (261) 79
    EQ (262) 74
    NE (263) 75
    LE (264) 71
    GE (265) 72
    CONST (266) 7
    IF (267) 34 35 37
    ELSE (268) 35 37
    WHILE (269) 36 38
    CONTINUE (270) 45
    BREAK (271) 44
    VOID (272) 25
    IDENT <str_val> (273) 11 16 17 19 20 23 47 54 55
    INT_CONST <int_val> (274) 51


非终结语词，附有它们出现处的规则

    $accept (35)
        on left: 0
    CompUnit (36)
        on left: 1 2
        on right: 0
    CompUnit2 <ast_val> (37)
        on left: 3 4
        on right: 2 4
    Decl <ast_val> (38)
        on left: 5 6
        on right: 30
    ConstDecl <ast_val> (39)
        on left: 7
        on right: 5
    ConstDefList <ast_list_val> (40)
        on left: 8 9
        on right: 7 9
    BType <ast_val> (41)
        on left: 10
        on right: 7 13 23
    ConstDef <ast_val> (42)
        on left: 11
        on right: 8 9
    ConstInitVal <ast_val> (43)
        on left: 12
        on right: 11
    VarDecl <ast_val> (44)
        on left: 13
        on right: 6
    VarDefList <ast_list_val> (45)
        on left: 14 15
        on right: 13 15
    VarDef <ast_val> (46)
        on left: 16 17
        on right: 14 15
    InitVal <ast_val> (47)
        on left: 18
        on right: 17
    FuncDef <ast_val> (48)
        on left: 19 20
        on right: 1 3 4
    FuncFParams <func_fparams_val> (49)
        on left: 21 22
        on right: 20 22
    FuncFParam <ast_val> (50)
        on left: 23
        on right: 21 22
    FuncType <ast_val> (51)
        on left: 24 25
        on right: 19 20
    Block <ast_val> (52)
        on left: 26 27
        on right: 19 20 42
    BlockItemList <ast_list_val> (53)
        on left: 28 29
        on right: 26 29
    BlockItem <ast_val> (54)
        on left: 30 31
        on right: 28 29
    Stmt <ast_val> (55)
        on left: 32 33
        on right: 31 34
    open_statement <ast_val> (56)
        on left: 34 35 36
        on right: 32 35 36
    closed_statement <ast_val> (57)
        on left: 37 38 39 40 41 42 43 44 45
        on right: 33 35 37 38
    Exp <ast_val> (58)
        on left: 46
        on right: 18 34 35 36 37 38 39 40 43 48 56 57 80
    LVal <ast_val> (59)
        on left: 47
        on right: 39 49
    PrimaryExp <ast_val> (60)
        on left: 48 49 50
        on right: 52
    Number <int_val> (61)
        on left: 51
        on right: 50
    UnaryExp <ast_val> (62)
        on left: 52 53 54 55
        on right: 53 61 62 63 64
    FuncRParams <ast_val> (63)
        on left: 56 57
        on right: 54 57
    UnaryOp <str_val> (64)
        on left: 58 59 60
        on right: 53
    MulExp <ast_val> (65)
        on left: 61 62 63 64
        on right: 62 63 64 65 66 67
    AddExp <ast_val> (66)
        on left: 65 66 67
        on right: 66 67 68 69 70 71 72
    RelExp <ast_val> (67)
        on left: 68 69 70 71 72
        on right: 69 70 71 72 73 74 75
    EqExp <ast_val> (68)
        on left: 73 74 75
        on right: 74 75 76 77
    LAndExp <ast_val> (69)
        on left: 76 77
        on right: 77 78 79
    LOrExp <ast_val> (70)
        on left: 78 79
        on right: 46 79
    ConstExp <ast_val> (71)
        on left: 80
        on right: 12


状态 0

    0 $accept: • CompUnit $end

    INT   偏移，并进入状态 1
    VOID  偏移，并进入状态 2

    CompUnit   转到状态 3
    CompUnit2  转到状态 4
    FuncDef    转到状态 5
    FuncType   转到状态 6


状态 1

   24 FuncType: INT •

    $default  使用规则 24 以归约 (FuncType)


状态 2

   25 FuncType: VOID •

    $default  使用规则 25 以归约 (FuncType)


状态 3

    0 $accept: CompUnit • $end

    $end  偏移，并进入状态 7


状态 4

    2 CompUnit: CompUnit2 •
    4 CompUnit2: CompUnit2 • FuncDef

    INT   偏移，并进入状态 1
    VOID  偏移，并进入状态 2

    $default  使用规则 2 以归约 (CompUnit)

    FuncDef   转到状态 8
    FuncType  转到状态 6


状态 5

    1 CompUnit: FuncDef •
    3 CompUnit2: FuncDef • FuncDef

    INT   偏移，并进入状态 1
    VOID  偏移，并进入状态 2

    $default  使用规则 1 以归约 (CompUnit)

    FuncDef   转到状态 9
    FuncType  转到状态 6


状态 6

   19 FuncDef: FuncType • IDENT '(' ')' Block
   20        | FuncType • IDENT '(' FuncFParams ')' Block

    IDENT  偏移，并进入状态 10


状态 7

    0 $accept: CompUnit $end •

    $default  接受


状态 8

    4 CompUnit2: CompUnit2 FuncDef •

    $default  使用规则 4 以归约 (CompUnit2)


状态 9

    3 CompUnit2: FuncDef FuncDef •

    $default  使用规则 3 以归约 (CompUnit2)


状态 10

   19 FuncDef: FuncType IDENT • '(' ')' Block
   20        | FuncType IDENT • '(' FuncFParams ')' Block

    '('  偏移，并进入状态 11


状态 11

   19 FuncDef: FuncType IDENT '(' • ')' Block
   20        | FuncType IDENT '(' • FuncFParams ')' Block

    INT  偏移，并进入状态 12
    ')'  偏移，并进入状态 13

    BType        转到状态 14
    FuncFParams  转到状态 15
    FuncFParam   转到状态 16


状态 12

   10 BType: INT •

    $default  使用规则 10 以归约 (BType)


状态 13

   19 FuncDef: FuncType IDENT '(' ')' • Block

    '{'  偏移，并进入状态 17

    Block  转到状态 18


状态 14

   23 FuncFParam: BType • IDENT

    IDENT  偏移，并进入状态 19


状态 15

   20 FuncDef: FuncType IDENT '(' FuncFParams • ')' Block

    ')'  偏移，并进入状态 20


状态 16

   21 FuncFParams: FuncFParam •
   22            | FuncFParam • ',' FuncFParams

    ','  偏移，并进入状态 21

    $default  使用规则 21 以归约 (FuncFParams)


状态 17

   26 Block: '{' • BlockItemList '}'
   27      | '{' • '}'

    INT        偏移，并进入状态 12
    RETURN     偏移，并进入状态 22
    CONST      偏移，并进入状态 23
    IF         偏移，并进入状态 24
    WHILE      偏移，并进入状态 25
    CONTINUE   偏移，并进入状态 26
    BREAK      偏移，并进入状态 27
    IDENT      偏移，并进入状态 28
    INT_CONST  偏移，并进入状态 29
    ';'        偏移，并进入状态 30
    '('        偏移，并进入状态 31
    '{'        偏移，并进入状态 17
    '}'        偏移，并进入状态 32
    '+'        偏移，并进入状态 33
    '-'        偏移，并进入状态 34
    '!'        偏移，并进入状态 35

    Decl              转到状态 36
    ConstDecl         转到状态 37
    BType             转到状态 38
    VarDecl           转到状态 39
    Block             转到状态 40
    BlockItemList     转到状态 41
    BlockItem         转到状态 42
    Stmt              转到状态 43
    open_statement    转到状态 44
    closed_statement  转到状态 45
    Exp               转到状态 46
    LVal              转到状态 47
    PrimaryExp        转到状态 48
    Number            转到状态 49
    UnaryExp          转到状态 50
    UnaryOp           转到状态 51
    MulExp            转到状态 52
    AddExp            转到状态 53
    RelExp            转到状态 54
    EqExp             转到状态 55
    LAndExp           转到状态 56
    LOrExp            转到状态 57


状态 18

   19 FuncDef: FuncType IDENT '(' ')' Block •

    $default  使用规则 19 以归约 (FuncDef)


状态 19

   23 FuncFParam: BType IDENT •

    $default  使用规则 23 以归约 (FuncFParam)


状态 20

   20 FuncDef: FuncType IDENT '(' FuncFParams ')' • Block

    '{'  偏移，并进入状态 17

    Block  转到状态 58


状态 21

   22 FuncFParams: FuncFParam ',' • FuncFParams

    INT  偏移，并进入状态 12

    BType        转到状态 14
    FuncFParams  转到状态 59
    FuncFParam   转到状态 16


状态 22

   43 closed_statement: RETURN • Exp ';'

    IDENT      偏移，并进入状态 28
    INT_CONST  偏移，并进入状态 29
    '('        偏移，并进入状态 31
    '+'        偏移，并进入状态 33
    '-'        偏移，并进入状态 34
    '!'        偏移，并进入状态 35

    Exp         转到状态 60
    LVal        转到状态 61
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 53
    RelExp      转到状态 54
    EqExp       转到状态 55
    LAndExp     转到状态 56
    LOrExp      转到状态 57


状态 23

    7 ConstDecl: CONST • BType ConstDefList ';'

    INT  偏移，并进入状态 12

    BType  转到状态 62


状态 24

   34 open_statement: IF • '(' Exp ')' Stmt
   35               | IF • '(' Exp ')' closed_statement ELSE open_statement
   37 closed_statement: IF • '(' Exp ')' closed_statement ELSE closed_statement

    '('  偏移，并进入状态 63


状态 25

   36 open_statement: WHILE • '(' Exp ')' open_statement
   38 closed_statement: WHILE • '(' Exp ')' closed_statement

    '('  偏移，并进入状态 64


状态 26

   45 closed_statement: CONTINUE • ';'

    ';'  偏移，并进入状态 65


状态 27

   44 closed_statement: BREAK • ';'

    ';'  偏移，并进入状态 66


状态 28

   47 LVal: IDENT •
   54 UnaryExp: IDENT • '(' FuncRParams ')'
   55         | IDENT • '(' ')'

    '('  偏移，并进入状态 67

    $default  使用规则 47 以归约 (LVal)


状态 29

   51 Number: INT_CONST •

    $default  使用规则 51 以归约 (Number)


状态 30

   41 closed_statement: ';' •

    $default  使用规则 41 以归约 (closed_statement)


状态 31

   48 PrimaryExp: '(' • Exp ')'

    IDENT      偏移，并进入状态 28
    INT_CONST  偏移，并进入状态 29
    '('        偏移，并进入状态 31
    '+'        偏移，并进入状态 33
    '-'        偏移，并进入状态 34
    '!'        偏移，并进入状态 35

    Exp         转到状态 68
    LVal        转到状态 61
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 53
    RelExp      转到状态 54
    EqExp       转到状态 55
    LAndExp     转到状态 56
    LOrExp      转到状态 57


状态 32

   27 Block: '{' '}' •

    $default  使用规则 27 以归约 (Block)


状态 33

   58 UnaryOp: '+' •

    $default  使用规则 58 以归约 (UnaryOp)


状态 34

   59 UnaryOp: '-' •

    $default  使用规则 59 以归约 (UnaryOp)


状态 35

   60 UnaryOp: '!' •

    $default  使用规则 60 以归约 (UnaryOp)


状态 36

   30 BlockItem: Decl •

    $default  使用规则 30 以归约 (BlockItem)


状态 37

    5 Decl: ConstDecl •

    $default  使用规则 5 以归约 (Decl)


状态 38

   13 VarDecl: BType • VarDefList ';'

    IDENT  偏移，并进入状态 69

    VarDefList  转到状态 70
    VarDef      转到状态 71


状态 39

    6 Decl: VarDecl •

    $default  使用规则 6 以归约 (Decl)


状态 40

   42 closed_statement: Block •

    $default  使用规则 42 以归约 (closed_statement)


状态 41

   26 Block: '{' BlockItemList • '}'

    '}'  偏移，并进入状态 72


状态 42

   28 BlockItemList: BlockItem •
   29              | BlockItem • BlockItemList

    INT        偏移，并进入状态 12
    RETURN     偏移，并进入状态 22
    CONST      偏移，并进入状态 23
    IF         偏移，并进入状态 24
    WHILE      偏移，并进入状态 25
    CONTINUE   偏移，并进入状态 26
    BREAK      偏移，并进入状态 27
    IDENT      偏移，并进入状态 28
    INT_CONST  偏移，并进入状态 29
    ';'        偏移，并进入状态 30
    '('        偏移，并进入状态 31
    '{'        偏移，并进入状态 17
    '+'        偏移，并进入状态 33
    '-'        偏移，并进入状态 34
    '!'        偏移，并进入状态 35

    $default  使用规则 28 以归约 (BlockItemList)

    Decl              转到状态 36
    ConstDecl         转到状态 37
    BType             转到状态 38
    VarDecl           转到状态 39
    Block             转到状态 40
    BlockItemList     转到状态 73
    BlockItem         转到状态 42
    Stmt              转到状态 43
    open_statement    转到状态 44
    closed_statement  转到状态 45
    Exp               转到状态 46
    LVal              转到状态 47
    PrimaryExp        转到状态 48
    Number            转到状态 49
    UnaryExp          转到状态 50
    UnaryOp           转到状态 51
    MulExp            转到状态 52
    AddExp            转到状态 53
    RelExp            转到状态 54
    EqExp             转到状态 55
    LAndExp           转到状态 56
    LOrExp            转到状态 57


状态 43

   31 BlockItem: Stmt •

    $default  使用规则 31 以归约 (BlockItem)


状态 44

   32 Stmt: open_statement •

    $default  使用规则 32 以归约 (Stmt)


状态 45

   33 Stmt: closed_statement •

    $default  使用规则 33 以归约 (Stmt)


状态 46

   40 closed_statement: Exp • ';'

    ';'  偏移，并进入状态 74


状态 47

   39 closed_statement: LVal • '=' Exp ';'
   49 PrimaryExp: LVal •

    '='  偏移，并进入状态 75

    $default  使用规则 49 以归约 (PrimaryExp)


状态 48

   52 UnaryExp: PrimaryExp •

    $default  使用规则 52 以归约 (UnaryExp)


状态 49

   50 PrimaryExp: Number •

    $default  使用规则 50 以归约 (PrimaryExp)


状态 50

   61 MulExp: UnaryExp •

    $default  使用规则 61 以归约 (MulExp)


状态 51

   53 UnaryExp: UnaryOp • UnaryExp

    IDENT      偏移，并进入状态 28
    INT_CONST  偏移，并进入状态 29
    '('        偏移，并进入状态 31
    '+'        偏移，并进入状态 33
    '-'        偏移，并进入状态 34
    '!'        偏移，并进入状态 35

    LVal        转到状态 61
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 76
    UnaryOp     转到状态 51


状态 52

   62 MulExp: MulExp • '*' UnaryExp
   63       | MulExp • '/' UnaryExp
   64       | MulExp • '%' UnaryExp
   65 AddExp: MulExp •

    '*'  偏移，并进入状态 77
    '/'  偏移，并进入状态 78
    '%'  偏移，并进入状态 79

    $default  使用规则 65 以归约 (AddExp)


状态 53

   66 AddExp: AddExp • '+' MulExp
   67       | AddExp • '-' MulExp
   68 RelExp: AddExp •

    '+'  偏移，并进入状态 80
    '-'  偏移，并进入状态 81

    $default  使用规则 68 以归约 (RelExp)


状态 54

   69 RelExp: RelExp • '<' AddExp
   70       | RelExp • '>' AddExp
   71       | RelExp • LE AddExp
   72       | RelExp • GE AddExp
   73 EqExp: RelExp •

    LE   偏移，并进入状态 82
    GE   偏移，并进入状态 83
    '<'  偏移，并进入状态 84
    '>'  偏移，并进入状态 85

    $default  使用规则 73 以归约 (EqExp)


状态 55

   74 EqExp: EqExp • EQ RelExp
   75      | EqExp • NE RelExp
   76 LAndExp: EqExp •

    EQ  偏移，并进入状态 86
    NE  偏移，并进入状态 87

    $default  使用规则 76 以归约 (LAndExp)


状态 56

   77 LAndExp: LAndExp • AND EqExp
   78 LOrExp: LAndExp •

    AND  偏移，并进入状态 88

    $default  使用规则 78 以归约 (LOrExp)


状态 57

   46 Exp: LOrExp •
   79 LOrExp: LOrExp • OR LAndExp

    OR  偏移，并进入状态 89

    $default  使用规则 46 以归约 (Exp)


状态 58

   20 FuncDef: FuncType IDENT '(' FuncFParams ')' Block •

    $default  使用规则 20 以归约 (FuncDef)


状态 59

   22 FuncFParams: FuncFParam ',' FuncFParams •

    $default  使用规则 22 以归约 (FuncFParams)


状态 60

   43 closed_statement: RETURN Exp • ';'

    ';'  偏移，并进入状态 90


状态 61

   49 PrimaryExp: LVal •

    $default  使用规则 49 以归约 (PrimaryExp)


状态 62

    7 ConstDecl: CONST BType • ConstDefList ';'

    IDENT  偏移，并进入状态 91

    ConstDefList  转到状态 92
    ConstDef      转到状态 93


状态 63

   34 open_statement: IF '(' • Exp ')' Stmt
   35               | IF '(' • Exp ')' closed_statement ELSE open_statement
   37 closed_statement: IF '(' • Exp ')' closed_statement ELSE closed_statement

    IDENT      偏移，并进入状态 28
    INT_CONST  偏移，并进入状态 29
    '('        偏移，并进入状态 31
    '+'        偏移，并进入状态 33
    '-'        偏移，并进入状态 34
    '!'        偏移，并进入状态 35

    Exp         转到状态 94
    LVal        转到状态 61
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 53
    RelExp      转到状态 54
    EqExp       转到状态 55
    LAndExp     转到状态 56
    LOrExp      转到状态 57


状态 64

   36 open_statement: WHILE '(' • Exp ')' open_statement
   38 closed_statement: WHILE '(' • Exp ')' closed_statement

    IDENT      偏移，并进入状态 28
    INT_CONST  偏移，并进入状态 29
    '('        偏移，并进入状态 31
    '+'        偏移，并进入状态 33
    '-'        偏移，并进入状态 34
    '!'        偏移，并进入状态 35

    Exp         转到状态 95
    LVal        转到状态 61
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 53
    RelExp      转到状态 54
    EqExp       转到状态 55
    LAndExp     转到状态 56
    LOrExp      转到状态 57


状态 65

   45 closed_statement: CONTINUE ';' •

    $default  使用规则 45 以归约 (closed_statement)


状态 66

   44 closed_statement: BREAK ';' •

    $default  使用规则 44 以归约 (closed_statement)


状态 67

   54 UnaryExp: IDENT '(' • FuncRParams ')'
   55         | IDENT '(' • ')'

    IDENT      偏移，并进入状态 28
    INT_CONST  偏移，并进入状态 29
    '('        偏移，并进入状态 31
    ')'        偏移，并进入状态 96
    '+'        偏移，并进入状态 33
    '-'        偏移，并进入状态 34
    '!'        偏移，并进入状态 35

    Exp          转到状态 97
    LVal         转到状态 61
    PrimaryExp   转到状态 48
    Number       转到状态 49
    UnaryExp     转到状态 50
    FuncRParams  转到状态 98
    UnaryOp      转到状态 51
    MulExp       转到状态 52
    AddExp       转到状态 53
    RelExp       转到状态 54
    EqExp        转到状态 55
    LAndExp      转到状态 56
    LOrExp       转到状态 57


状态 68

   48 PrimaryExp: '(' Exp • ')'

    ')'  偏移，并进入状态 99


状态 69

   16 VarDef: IDENT •
   17       | IDENT • '=' InitVal

    '='  偏移，并进入状态 100

    $default  使用规则 16 以归约 (VarDef)


状态 70

   13 VarDecl: BType VarDefList • ';'

    ';'  偏移，并进入状态 101


状态 71

   14 VarDefList: VarDef •
   15           | VarDef • ',' VarDefList

    ','  偏移，并进入状态 102

    $default  使用规则 14 以归约 (VarDefList)


状态 72

   26 Block: '{' BlockItemList '}' •

    $default  使用规则 26 以归约 (Block)


状态 73

   29 BlockItemList: BlockItem BlockItemList •

    $default  使用规则 29 以归约 (BlockItemList)


状态 74

   40 closed_statement: Exp ';' •

    $default  使用规则 40 以归约 (closed_statement)


状态 75

   39 closed_statement: LVal '=' • Exp ';'

    IDENT      偏移，并进入状态 28
    INT_CONST  偏移，并进入状态 29
    '('        偏移，并进入状态 31
    '+'        偏移，并进入状态 33
    '-'        偏移，并进入状态 34
    '!'        偏移，并进入状态 35

    Exp         转到状态 103
    LVal        转到状态 61
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 53
    RelExp      转到状态 54
    EqExp       转到状态 55
    LAndExp     转到状态 56
    LOrExp      转到状态 57


状态 76

   53 UnaryExp: UnaryOp UnaryExp •

    $default  使用规则 53 以归约 (UnaryExp)


状态 77

   62 MulExp: MulExp '*' • UnaryExp

    IDENT      偏移，并进入状态 28
    INT_CONST  偏移，并进入状态 29
    '('        偏移，并进入状态 31
    '+'        偏移，并进入状态 33
    '-'        偏移，并进入状态 34
    '!'        偏移，并进入状态 35

    LVal        转到状态 61
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 104
    UnaryOp     转到状态 51


状态 78

   63 MulExp: MulExp '/' • UnaryExp

    IDENT      偏移，并进入状态 28
    INT_CONST  偏移，并进入状态 29
    '('        偏移，并进入状态 31
    '+'        偏移，并进入状态 33
    '-'        偏移，并进入状态 34
    '!'        偏移，并进入状态 35

    LVal        转到状态 61
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 105
    UnaryOp     转到状态 51


状态 79

   64 MulExp: MulExp '%' • UnaryExp

    IDENT      偏移，并进入状态 28
    INT_CONST  偏移，并进入状态 29
    '('        偏移，并进入状态 31
    '+'        偏移，并进入状态 33
    '-'        偏移，并进入状态 34
    '!'        偏移，并进入状态 35

    LVal        转到状态 61
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 106
    UnaryOp     转到状态 51


状态 80

   66 AddExp: AddExp '+' • MulExp

    IDENT      偏移，并进入状态 28
    INT_CONST  偏移，并进入状态 29
    '('        偏移，并进入状态 31
    '+'        偏移，并进入状态 33
    '-'        偏移，并进入状态 34
    '!'        偏移，并进入状态 35

    LVal        转到状态 61
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 107


状态 81

   67 AddExp: AddExp '-' • MulExp

    IDENT      偏移，并进入状态 28
    INT_CONST  偏移，并进入状态 29
    '('        偏移，并进入状态 31
    '+'        偏移，并进入状态 33
    '-'        偏移，并进入状态 34
    '!'        偏移，并进入状态 35

    LVal        转到状态 61
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 108


状态 82

   71 RelExp: RelExp LE • AddExp

    IDENT      偏移，并进入状态 28
    INT_CONST  偏移，并进入状态 29
    '('        偏移，并进入状态 31
    '+'        偏移，并进入状态 33
    '-'        偏移，并进入状态 34
    '!'        偏移，并进入状态 35

    LVal        转到状态 61
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 109


状态 83

   72 RelExp: RelExp GE • AddExp

    IDENT      偏移，并进入状态 28
    INT_CONST  偏移，并进入状态 29
    '('        偏移，并进入状态 31
    '+'        偏移，并进入状态 33
    '-'        偏移，并进入状态 34
    '!'        偏移，并进入状态 35

    LVal        转到状态 61
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 110


状态 84

   69 RelExp: RelExp '<' • AddExp

    IDENT      偏移，并进入状态 28
    INT_CONST  偏移，并进入状态 29
    '('        偏移，并进入状态 31
    '+'        偏移，并进入状态 33
    '-'        偏移，并进入状态 34
    '!'        偏移，并进入状态 35

    LVal        转到状态 61
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 111


状态 85

   70 RelExp: RelExp '>' • AddExp

    IDENT      偏移，并进入状态 28
    INT_CONST  偏移，并进入状态 29
    '('        偏移，并进入状态 31
    '+'        偏移，并进入状态 33
    '-'        偏移，并进入状态 34
    '!'        偏移，并进入状态 35

    LVal        转到状态 61
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 112


状态 86

   74 EqExp: EqExp EQ • RelExp

    IDENT      偏移，并进入状态 28
    INT_CONST  偏移，并进入状态 29
    '('        偏移，并进入状态 31
    '+'        偏移，并进入状态 33
    '-'        偏移，并进入状态 34
    '!'        偏移，并进入状态 35

    LVal        转到状态 61
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 53
    RelExp      转到状态 113


状态 87

   75 EqExp: EqExp NE • RelExp

    IDENT      偏移，并进入状态 28
    INT_CONST  偏移，并进入状态 29
    '('        偏移，并进入状态 31
    '+'        偏移，并进入状态 33
    '-'        偏移，并进入状态 34
    '!'        偏移，并进入状态 35

    LVal        转到状态 61
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 53
    RelExp      转到状态 114


状态 88

   77 LAndExp: LAndExp AND • EqExp

    IDENT      偏移，并进入状态 28
    INT_CONST  偏移，并进入状态 29
    '('        偏移，并进入状态 31
    '+'        偏移，并进入状态 33
    '-'        偏移，并进入状态 34
    '!'        偏移，并进入状态 35

    LVal        转到状态 61
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 53
    RelExp      转到状态 54
    EqExp       转到状态 115


状态 89

   79 LOrExp: LOrExp OR • LAndExp

    IDENT      偏移，并进入状态 28
    INT_CONST  偏移，并进入状态 29
    '('        偏移，并进入状态 31
    '+'        偏移，并进入状态 33
    '-'        偏移，并进入状态 34
    '!'        偏移，并进入状态 35

    LVal        转到状态 61
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 53
    RelExp      转到状态 54
    EqExp       转到状态 55
    LAndExp     转到状态 116


状态 90

   43 closed_statement: RETURN Exp ';' •

    $default  使用规则 43 以归约 (closed_statement)


状态 91

   11 ConstDef: IDENT • '=' ConstInitVal

    '='  偏移，并进入状态 117


状态 92

    7 ConstDecl: CONST BType ConstDefList • ';'

    ';'  偏移，并进入状态 118


状态 93

    8 ConstDefList: ConstDef •
    9             | ConstDef • ',' ConstDefList

    ','  偏移，并进入状态 119

    $default  使用规则 8 以归约 (ConstDefList)


状态 94

   34 open_statement: IF '(' Exp • ')' Stmt
   35               | IF '(' Exp • ')' closed_statement ELSE open_statement
   37 closed_statement: IF '(' Exp • ')' closed_statement ELSE closed_statement

    ')'  偏移，并进入状态 120


状态 95

   36 open_statement: WHILE '(' Exp • ')' open_statement
   38 closed_statement: WHILE '(' Exp • ')' closed_statement

    ')'  偏移，并进入状态 121


状态 96

   55 UnaryExp: IDENT '(' ')' •

    $default  使用规则 55 以归约 (UnaryExp)


状态 97

   56 FuncRParams: Exp •
   57            | Exp • ',' FuncRParams

    ','  偏移，并进入状态 122

    $default  使用规则 56 以归约 (FuncRParams)


状态 98

   54 UnaryExp: IDENT '(' FuncRParams • ')'

    ')'  偏移，并进入状态 123


状态 99

   48 PrimaryExp: '(' Exp ')' •

    $default  使用规则 48 以归约 (PrimaryExp)


状态 100

   17 VarDef: IDENT '=' • InitVal

    IDENT      偏移，并进入状态 28
    INT_CONST  偏移，并进入状态 29
    '('        偏移，并进入状态 31
    '+'        偏移，并进入状态 33
    '-'        偏移，并进入状态 34
    '!'        偏移，并进入状态 35

    InitVal     转到状态 124
    Exp         转到状态 125
    LVal        转到状态 61
    PrimaryExp  转到状态 48
    Number      转到状态 49
    UnaryExp    转到状态 50
    UnaryOp     转到状态 51
    MulExp      转到状态 52
    AddExp      转到状态 53
    RelExp      转到状态 54
    EqExp       转到状态 55
    LAndExp     转到状态 56
    LOrExp      转到状态 57


状态 101

   13 VarDecl: BType VarDefList ';' •

    $default  使用规则 13 以归约 (VarDecl)


状态 102

   15 VarDefList: VarDef ',' • VarDefList

    IDENT  偏移，并进入状态 69

    VarDefList  转到状态 126
    VarDef      转到状态 71


状态 103

   39 closed_statement: LVal '=' Exp • ';'

    ';'  偏移，并进入状态 127


状态 104

   62 MulExp: MulExp '*' UnaryExp •

    $default  使用规则 62 以归约 (MulExp)


状态 105

   63 MulExp: MulExp '/' UnaryExp •

    $default  使用规则 63 以归约 (MulExp)


状态 106

   64 MulExp: MulExp '%' UnaryExp •

    $default  使用规则 64 以归约 (MulExp)


状态 107

   62 MulExp: MulExp • '*' UnaryExp
   63       | MulExp • '/' UnaryExp
   64       | MulExp • '%' UnaryExp
   66 AddExp: AddExp '+' MulExp •

    '*'  偏移，并进入状态 77
    '/'  偏移，并进入状态 78
    '%'  偏移，并进入状态 79

    $default  使用规则 66 以归约 (AddExp)


状态 108

   62 MulExp: MulExp • '*' UnaryExp
   63       | MulExp • '/' UnaryExp
   64       | MulExp • '%' UnaryExp
   67 AddExp: AddExp '-' MulExp •

    '*'  偏移，并进入状态 77
    '/'  偏移，并进入状态 78
    '%'  偏移，并进入状态 79

    $default  使用规则 67 以归约 (AddExp)


状态 109

   66 AddExp: AddExp • '+' MulExp
   67       | AddExp • '-' MulExp
   71 RelExp: RelExp LE AddExp •

    '+'  偏移，并进入状态 80
    '-'  偏移，并进入状态 81

    $default  使用规则 71 以归约 (RelExp)


状态 110

   66 AddExp: AddExp • '+' MulExp
   67       | AddExp • '-' MulExp
   72 RelExp: RelExp GE AddExp •

    '+'  偏移，并进入状态 80
    '-'  偏移，并进入状态 81

    $default  使用规则 72 以归约 (RelExp)


状态 111

   66 AddExp: AddExp • '+' MulExp
   67       | AddExp • '-' MulExp
   69 RelExp: RelExp '<' AddExp •

    '+'  偏移，并进入状态 80
    '-'  偏移，并进入状态 81

    $default  使用规则 69 以归约 (RelExp)


状态 112

   66 AddExp: AddExp • '+' MulExp
   67       | AddExp • '-' MulExp
   70 RelExp: RelExp '>' AddExp •

    '+'  偏移，并进入状态 80
    '-'  偏移，并进入状态 81

    $default  使用规则 70 以归约 (RelExp)


状态 113

   69 RelExp: RelExp • '<' AddExp
   70       | RelExp • '>' AddExp
   71       | RelExp • LE AddExp
   72       | RelExp • GE AddExp
   74 EqExp: EqExp EQ RelExp •

    LE   偏移，并进入状态 82
    GE   偏移，并进入状态 83
    '<'  偏移，并进入状态 84
    '>'  偏移，并进入状态 85

    $default  使用规则 74 以归约 (EqExp)


状态 114

   69 RelExp: RelExp • '<' AddExp
   70       | RelExp • '>' AddExp
   71       | RelExp • LE AddExp
   72       | RelExp • GE AddExp
   75 EqExp: EqExp NE RelExp •

    LE   偏移，并进入状态 82
    GE   偏移，并进入状态 83
    '<'  偏移，并进入状态 84
    '>'  偏移，并进入状态 85

    $default  使用规则 75 以归约 (EqExp)


状态 115

   74 EqExp: EqExp • EQ RelExp
   75      | EqExp • NE RelExp
   77 LAndExp: LAndExp AND EqExp •

    EQ  偏移，并进入状态 86
    NE  偏移，并进入状态 87

    $default  使用规则 77 以归约 (LAndExp)


状态 116

   77 LAndExp: LAndExp • AND EqExp
   79 LOrExp: LOrExp OR LAndExp •

    AND  偏移，并进入状态 88

    $default  使用规则 79 以归约 (LOrExp)


状态 117

   11 ConstDef: IDENT '=' • ConstInitVal

    IDENT      偏移，并进入状态 28
    INT_CONST  偏移，并进入状态 29
    '('        偏移，并进入状态 31
    '+'        偏移，并进入状态 33
    '-'        偏移，并进入状态 34
    '!'        偏移，并进入状态 35

    ConstInitVal  转到状态 128
    Exp           转到状态 129
    LVal          转到状态 61
    PrimaryExp    转到状态 48
    Number        转到状态 49
    UnaryExp      转到状态 50
    UnaryOp       转到状态 51
    MulExp        转到状态 52
    AddExp        转到状态 53
    RelExp        转到状态 54
    EqExp         转到状态 55
    LAndExp       转到状态 56
    LOrExp        转到状态 57
    ConstExp      转到状态 130


状态 118

    7 ConstDecl: CONST BType ConstDefList ';' •

    $default  使用规则 7 以归约 (ConstDecl)


状态 119

    9 ConstDefList: ConstDef ',' • ConstDefList

    IDENT  偏移，并进入状态 91

    ConstDefList  转到状态 131
    ConstDef      转到状态 93


状态 120

   34 open_statement: IF '(' Exp ')' • Stmt
   35               | IF '(' Exp ')' • closed_statement ELSE open_statement
   37 closed_statement: IF '(' Exp ')' • closed_statement ELSE closed_statement

    RETURN     偏移，并进入状态 22
    IF         偏移，并进入状态 24
    WHILE      偏移，并进入状态 25
    CONTINUE   偏移，并进入状态 26
    BREAK      偏移，并进入状态 27
    IDENT      偏移，并进入状态 28
    INT_CONST  偏移，并进入状态 29
    ';'        偏移，并进入状态 30
    '('        偏移，并进入状态 31
    '{'        偏移，并进入状态 17
    '+'        偏移，并进入状态 33
    '-'        偏移，并进入状态 34
    '!'        偏移，并进入状态 35

    Block             转到状态 40
    Stmt              转到状态 132
    open_statement    转到状态 44
    closed_statement  转到状态 133
    Exp               转到状态 46
    LVal              转到状态 47
    PrimaryExp        转到状态 48
    Number            转到状态 49
    UnaryExp          转到状态 50
    UnaryOp           转到状态 51
    MulExp            转到状态 52
    AddExp            转到状态 53
    RelExp            转到状态 54
    EqExp             转到状态 55
    LAndExp           转到状态 56
    LOrExp            转到状态 57


状态 121

   36 open_statement: WHILE '(' Exp ')' • open_statement
   38 closed_statement: WHILE '(' Exp ')' • closed_statement

    RETURN     偏移，并进入状态 22
    IF         偏移，并进入状态 24
    WHILE      偏移，并进入状态 25
    CONTINUE   偏移，并进入状态 26
    BREAK      偏移，并进入状态 27
    IDENT      偏移，并进入状态 28
    INT_CONST  偏移，并进入状态 29
    ';'        偏移，并进入状态 30
    '('        偏移，并进入状态 31
    '{'        偏移，并进入状态 17
    '+'        偏移，并进入状态 33
    '-'        偏移，并进入状态 34
    '!'        偏移，并进入状态 35

    Block             转到状态 40
    open_statement    转到状态 134
    closed_statement  转到状态 135
    Exp               转到状态 46
    LVal              转到状态 47
    PrimaryExp        转到状态 48
    Number            转到状态 49
    UnaryExp          转到状态 50
    UnaryOp           转到状态 51
    MulExp            转到状态 52
    AddExp            转到状态 53
    RelExp            转到状态 54
    EqExp             转到状态 55
    LAndExp           转到状态 56
    LOrExp            转到状态 57


状态 122

   57 FuncRParams: Exp ',' • FuncRParams

    IDENT      偏移，并进入状态 28
    INT_CONST  偏移，并进入状态 29
    '('        偏移，并进入状态 31
    '+'        偏移，并进入状态 33
    '-'        偏移，并进入状态 34
    '!'        偏移，并进入状态 35

    Exp          转到状态 97
    LVal         转到状态 61
    PrimaryExp   转到状态 48
    Number       转到状态 49
    UnaryExp     转到状态 50
    FuncRParams  转到状态 136
    UnaryOp      转到状态 51
    MulExp       转到状态 52
    AddExp       转到状态 53
    RelExp       转到状态 54
    EqExp        转到状态 55
    LAndExp      转到状态 56
    LOrExp       转到状态 57


状态 123

   54 UnaryExp: IDENT '(' FuncRParams ')' •

    $default  使用规则 54 以归约 (UnaryExp)


状态 124

   17 VarDef: IDENT '=' InitVal •

    $default  使用规则 17 以归约 (VarDef)


状态 125

   18 InitVal: Exp •

    $default  使用规则 18 以归约 (InitVal)


状态 126

   15 VarDefList: VarDef ',' VarDefList •

    $default  使用规则 15 以归约 (VarDefList)


状态 127

   39 closed_statement: LVal '=' Exp ';' •

    $default  使用规则 39 以归约 (closed_statement)


状态 128

   11 ConstDef: IDENT '=' ConstInitVal •

    $default  使用规则 11 以归约 (ConstDef)


状态 129

   80 ConstExp: Exp •

    $default  使用规则 80 以归约 (ConstExp)


状态 130

   12 ConstInitVal: ConstExp •

    $default  使用规则 12 以归约 (ConstInitVal)


状态 131

    9 ConstDefList: ConstDef ',' ConstDefList •

    $default  使用规则 9 以归约 (ConstDefList)


状态 132

   34 open_statement: IF '(' Exp ')' Stmt •

    $default  使用规则 34 以归约 (open_statement)


状态 133

   33 Stmt: closed_statement •
   35 open_statement: IF '(' Exp ')' closed_statement • ELSE open_statement
   37 closed_statement: IF '(' Exp ')' closed_statement • ELSE closed_statement

    ELSE  偏移，并进入状态 137

    $default  使用规则 33 以归约 (Stmt)


状态 134

   36 open_statement: WHILE '(' Exp ')' open_statement •

    $default  使用规则 36 以归约 (open_statement)


状态 135

   38 closed_statement: WHILE '(' Exp ')' closed_statement •

    $default  使用规则 38 以归约 (closed_statement)


状态 136

   57 FuncRParams: Exp ',' FuncRParams •

    $default  使用规则 57 以归约 (FuncRParams)


状态 137

   35 open_statement: IF '(' Exp ')' closed_statement ELSE • open_statement
   37 closed_statement: IF '(' Exp ')' closed_statement ELSE • closed_statement

    RETURN     偏移，并进入状态 22
    IF         偏移，并进入状态 24
    WHILE      偏移，并进入状态 25
    CONTINUE   偏移，并进入状态 26
    BREAK      偏移，并进入状态 27
    IDENT      偏移，并进入状态 28
    INT_CONST  偏移，并进入状态 29
    ';'        偏移，并进入状态 30
    '('        偏移，并进入状态 31
    '{'        偏移，并进入状态 17
    '+'        偏移，并进入状态 33
    '-'        偏移，并进入状态 34
    '!'        偏移，并进入状态 35

    Block             转到状态 40
    open_statement    转到状态 138
    closed_statement  转到状态 139
    Exp               转到状态 46
    LVal              转到状态 47
    PrimaryExp        转到状态 48
    Number            转到状态 49
    UnaryExp          转到状态 50
    UnaryOp           转到状态 51
    MulExp            转到状态 52
    AddExp            转到状态 53
    RelExp            转到状态 54
    EqExp             转到状态 55
    LAndExp           转到状态 56
    LOrExp            转到状态 57


状态 138

   35 open_statement: IF '(' Exp ')' closed_statement ELSE open_statement •

    $default  使用规则 35 以归约 (open_statement)


状态 139

   37 closed_statement: IF '(' Exp ')' closed_statement ELSE closed_statement •

    $default  使用规则 37 以归约 (closed_statement)
