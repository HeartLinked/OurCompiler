语法

    0 $accept: CompUnit $end

    1 CompUnit: FuncDef

    2 Decl: ConstDecl
    3     | VarDecl

    4 ConstDecl: CONST BType ConstDefList ';'

    5 ConstDefList: ConstDef
    6             | ConstDef ',' ConstDefList

    7 BType: INT

    8 ConstDef: IDENT '=' ConstInitVal

    9 ConstInitVal: ConstExp

   10 VarDecl: BType VarDefList ';'

   11 VarDefList: VarDef
   12           | VarDef ',' VarDefList

   13 VarDef: IDENT
   14       | IDENT '=' InitVal

   15 InitVal: Exp

   16 FuncDef: FuncType IDENT '(' ')' Block

   17 FuncType: INT

   18 Block: '{' BlockItemList '}'

   19 BlockItemList: BlockItem
   20              | BlockItem BlockItemList

   21 BlockItem: Decl
   22          | Stmt

   23 Stmt: open_statement
   24     | closed_statement

   25 open_statement: IF '(' Exp ')' Stmt
   26               | IF '(' Exp ')' closed_statement ELSE open_statement
   27               | WHILE '(' Exp ')' open_statement

   28 closed_statement: IF '(' Exp ')' closed_statement ELSE closed_statement
   29                 | WHILE '(' Exp ')' closed_statement
   30                 | LVal '=' Exp ';'
   31                 | Exp ';'
   32                 | ';'
   33                 | Block
   34                 | RETURN Exp ';'
   35                 | BREAK ';'
   36                 | CONTINUE ';'

   37 Exp: LOrExp

   38 LVal: IDENT

   39 PrimaryExp: '(' Exp ')'
   40           | LVal
   41           | Number

   42 Number: INT_CONST

   43 UnaryExp: PrimaryExp
   44         | UnaryOp UnaryExp

   45 UnaryOp: '+'
   46        | '-'
   47        | '!'

   48 MulExp: UnaryExp
   49       | MulExp '*' UnaryExp
   50       | MulExp '/' UnaryExp
   51       | MulExp '%' UnaryExp

   52 AddExp: MulExp
   53       | AddExp '+' MulExp
   54       | AddExp '-' MulExp

   55 RelExp: AddExp
   56       | RelExp '<' AddExp
   57       | RelExp '>' AddExp
   58       | RelExp LE AddExp
   59       | RelExp GE AddExp

   60 EqExp: RelExp
   61      | EqExp EQ RelExp
   62      | EqExp NE RelExp

   63 LAndExp: EqExp
   64        | LAndExp AND EqExp

   65 LOrExp: LAndExp
   66       | LOrExp OR LAndExp

   67 ConstExp: Exp


终结语词，附有它们出现处的规则

    $end (0) 0
    '!' (33) 47
    '%' (37) 51
    '(' (40) 16 25 26 27 28 29 39
    ')' (41) 16 25 26 27 28 29 39
    '*' (42) 49
    '+' (43) 45 53
    ',' (44) 6 12
    '-' (45) 46 54
    '/' (47) 50
    ';' (59) 4 10 30 31 32 34 35 36
    '<' (60) 56
    '=' (61) 8 14 30
    '>' (62) 57
    '{' (123) 18
    '}' (125) 18
    error (256)
    INT (258) 7 17
    RETURN (259) 34
    AND (260) 64
    OR (261) 66
    EQ (262) 61
    NE (263) 62
    LE (264) 58
    GE (265) 59
    CONST (266) 4
    IF (267) 25 26 28
    ELSE (268) 26 28
    WHILE (269) 27 29
    CONTINUE (270) 36
    BREAK (271) 35
    IDENT <str_val> (272) 8 13 14 16 38
    INT_CONST <int_val> (273) 42


非终结语词，附有它们出现处的规则

    $accept (34)
        on left: 0
    CompUnit (35)
        on left: 1
        on right: 0
    Decl <ast_val> (36)
        on left: 2 3
        on right: 21
    ConstDecl <ast_val> (37)
        on left: 4
        on right: 2
    ConstDefList <ast_list_val> (38)
        on left: 5 6
        on right: 4 6
    BType <ast_val> (39)
        on left: 7
        on right: 4 10
    ConstDef <ast_val> (40)
        on left: 8
        on right: 5 6
    ConstInitVal <ast_val> (41)
        on left: 9
        on right: 8
    VarDecl <ast_val> (42)
        on left: 10
        on right: 3
    VarDefList <ast_list_val> (43)
        on left: 11 12
        on right: 10 12
    VarDef <ast_val> (44)
        on left: 13 14
        on right: 11 12
    InitVal <ast_val> (45)
        on left: 15
        on right: 14
    FuncDef <ast_val> (46)
        on left: 16
        on right: 1
    FuncType <ast_val> (47)
        on left: 17
        on right: 16
    Block <ast_val> (48)
        on left: 18
        on right: 16 33
    BlockItemList <ast_list_val> (49)
        on left: 19 20
        on right: 18 20
    BlockItem <ast_val> (50)
        on left: 21 22
        on right: 19 20
    Stmt <ast_val> (51)
        on left: 23 24
        on right: 22 25
    open_statement <ast_val> (52)
        on left: 25 26 27
        on right: 23 26 27
    closed_statement <ast_val> (53)
        on left: 28 29 30 31 32 33 34 35 36
        on right: 24 26 28 29
    Exp <ast_val> (54)
        on left: 37
        on right: 15 25 26 27 28 29 30 31 34 39 67
    LVal <ast_val> (55)
        on left: 38
        on right: 30 40
    PrimaryExp <ast_val> (56)
        on left: 39 40 41
        on right: 43
    Number <int_val> (57)
        on left: 42
        on right: 41
    UnaryExp <ast_val> (58)
        on left: 43 44
        on right: 44 48 49 50 51
    UnaryOp <str_val> (59)
        on left: 45 46 47
        on right: 44
    MulExp <ast_val> (60)
        on left: 48 49 50 51
        on right: 49 50 51 52 53 54
    AddExp <ast_val> (61)
        on left: 52 53 54
        on right: 53 54 55 56 57 58 59
    RelExp <ast_val> (62)
        on left: 55 56 57 58 59
        on right: 56 57 58 59 60 61 62
    EqExp <ast_val> (63)
        on left: 60 61 62
        on right: 61 62 63 64
    LAndExp <ast_val> (64)
        on left: 63 64
        on right: 64 65 66
    LOrExp <ast_val> (65)
        on left: 65 66
        on right: 37 66
    ConstExp <ast_val> (66)
        on left: 67
        on right: 9


状态 0

    0 $accept: • CompUnit $end

    INT  偏移，并进入状态 1

    CompUnit  转到状态 2
    FuncDef   转到状态 3
    FuncType  转到状态 4


状态 1

   17 FuncType: INT •

    $default  使用规则 17 以归约 (FuncType)


状态 2

    0 $accept: CompUnit • $end

    $end  偏移，并进入状态 5


状态 3

    1 CompUnit: FuncDef •

    $default  使用规则 1 以归约 (CompUnit)


状态 4

   16 FuncDef: FuncType • IDENT '(' ')' Block

    IDENT  偏移，并进入状态 6


状态 5

    0 $accept: CompUnit $end •

    $default  接受


状态 6

   16 FuncDef: FuncType IDENT • '(' ')' Block

    '('  偏移，并进入状态 7


状态 7

   16 FuncDef: FuncType IDENT '(' • ')' Block

    ')'  偏移，并进入状态 8


状态 8

   16 FuncDef: FuncType IDENT '(' ')' • Block

    '{'  偏移，并进入状态 9

    Block  转到状态 10


状态 9

   18 Block: '{' • BlockItemList '}'

    INT        偏移，并进入状态 11
    RETURN     偏移，并进入状态 12
    CONST      偏移，并进入状态 13
    IF         偏移，并进入状态 14
    WHILE      偏移，并进入状态 15
    CONTINUE   偏移，并进入状态 16
    BREAK      偏移，并进入状态 17
    IDENT      偏移，并进入状态 18
    INT_CONST  偏移，并进入状态 19
    ';'        偏移，并进入状态 20
    '('        偏移，并进入状态 21
    '{'        偏移，并进入状态 9
    '+'        偏移，并进入状态 22
    '-'        偏移，并进入状态 23
    '!'        偏移，并进入状态 24

    Decl              转到状态 25
    ConstDecl         转到状态 26
    BType             转到状态 27
    VarDecl           转到状态 28
    Block             转到状态 29
    BlockItemList     转到状态 30
    BlockItem         转到状态 31
    Stmt              转到状态 32
    open_statement    转到状态 33
    closed_statement  转到状态 34
    Exp               转到状态 35
    LVal              转到状态 36
    PrimaryExp        转到状态 37
    Number            转到状态 38
    UnaryExp          转到状态 39
    UnaryOp           转到状态 40
    MulExp            转到状态 41
    AddExp            转到状态 42
    RelExp            转到状态 43
    EqExp             转到状态 44
    LAndExp           转到状态 45
    LOrExp            转到状态 46


状态 10

   16 FuncDef: FuncType IDENT '(' ')' Block •

    $default  使用规则 16 以归约 (FuncDef)


状态 11

    7 BType: INT •

    $default  使用规则 7 以归约 (BType)


状态 12

   34 closed_statement: RETURN • Exp ';'

    IDENT      偏移，并进入状态 18
    INT_CONST  偏移，并进入状态 19
    '('        偏移，并进入状态 21
    '+'        偏移，并进入状态 22
    '-'        偏移，并进入状态 23
    '!'        偏移，并进入状态 24

    Exp         转到状态 47
    LVal        转到状态 48
    PrimaryExp  转到状态 37
    Number      转到状态 38
    UnaryExp    转到状态 39
    UnaryOp     转到状态 40
    MulExp      转到状态 41
    AddExp      转到状态 42
    RelExp      转到状态 43
    EqExp       转到状态 44
    LAndExp     转到状态 45
    LOrExp      转到状态 46


状态 13

    4 ConstDecl: CONST • BType ConstDefList ';'

    INT  偏移，并进入状态 11

    BType  转到状态 49


状态 14

   25 open_statement: IF • '(' Exp ')' Stmt
   26               | IF • '(' Exp ')' closed_statement ELSE open_statement
   28 closed_statement: IF • '(' Exp ')' closed_statement ELSE closed_statement

    '('  偏移，并进入状态 50


状态 15

   27 open_statement: WHILE • '(' Exp ')' open_statement
   29 closed_statement: WHILE • '(' Exp ')' closed_statement

    '('  偏移，并进入状态 51


状态 16

   36 closed_statement: CONTINUE • ';'

    ';'  偏移，并进入状态 52


状态 17

   35 closed_statement: BREAK • ';'

    ';'  偏移，并进入状态 53


状态 18

   38 LVal: IDENT •

    $default  使用规则 38 以归约 (LVal)


状态 19

   42 Number: INT_CONST •

    $default  使用规则 42 以归约 (Number)


状态 20

   32 closed_statement: ';' •

    $default  使用规则 32 以归约 (closed_statement)


状态 21

   39 PrimaryExp: '(' • Exp ')'

    IDENT      偏移，并进入状态 18
    INT_CONST  偏移，并进入状态 19
    '('        偏移，并进入状态 21
    '+'        偏移，并进入状态 22
    '-'        偏移，并进入状态 23
    '!'        偏移，并进入状态 24

    Exp         转到状态 54
    LVal        转到状态 48
    PrimaryExp  转到状态 37
    Number      转到状态 38
    UnaryExp    转到状态 39
    UnaryOp     转到状态 40
    MulExp      转到状态 41
    AddExp      转到状态 42
    RelExp      转到状态 43
    EqExp       转到状态 44
    LAndExp     转到状态 45
    LOrExp      转到状态 46


状态 22

   45 UnaryOp: '+' •

    $default  使用规则 45 以归约 (UnaryOp)


状态 23

   46 UnaryOp: '-' •

    $default  使用规则 46 以归约 (UnaryOp)


状态 24

   47 UnaryOp: '!' •

    $default  使用规则 47 以归约 (UnaryOp)


状态 25

   21 BlockItem: Decl •

    $default  使用规则 21 以归约 (BlockItem)


状态 26

    2 Decl: ConstDecl •

    $default  使用规则 2 以归约 (Decl)


状态 27

   10 VarDecl: BType • VarDefList ';'

    IDENT  偏移，并进入状态 55

    VarDefList  转到状态 56
    VarDef      转到状态 57


状态 28

    3 Decl: VarDecl •

    $default  使用规则 3 以归约 (Decl)


状态 29

   33 closed_statement: Block •

    $default  使用规则 33 以归约 (closed_statement)


状态 30

   18 Block: '{' BlockItemList • '}'

    '}'  偏移，并进入状态 58


状态 31

   19 BlockItemList: BlockItem •
   20              | BlockItem • BlockItemList

    INT        偏移，并进入状态 11
    RETURN     偏移，并进入状态 12
    CONST      偏移，并进入状态 13
    IF         偏移，并进入状态 14
    WHILE      偏移，并进入状态 15
    CONTINUE   偏移，并进入状态 16
    BREAK      偏移，并进入状态 17
    IDENT      偏移，并进入状态 18
    INT_CONST  偏移，并进入状态 19
    ';'        偏移，并进入状态 20
    '('        偏移，并进入状态 21
    '{'        偏移，并进入状态 9
    '+'        偏移，并进入状态 22
    '-'        偏移，并进入状态 23
    '!'        偏移，并进入状态 24

    $default  使用规则 19 以归约 (BlockItemList)

    Decl              转到状态 25
    ConstDecl         转到状态 26
    BType             转到状态 27
    VarDecl           转到状态 28
    Block             转到状态 29
    BlockItemList     转到状态 59
    BlockItem         转到状态 31
    Stmt              转到状态 32
    open_statement    转到状态 33
    closed_statement  转到状态 34
    Exp               转到状态 35
    LVal              转到状态 36
    PrimaryExp        转到状态 37
    Number            转到状态 38
    UnaryExp          转到状态 39
    UnaryOp           转到状态 40
    MulExp            转到状态 41
    AddExp            转到状态 42
    RelExp            转到状态 43
    EqExp             转到状态 44
    LAndExp           转到状态 45
    LOrExp            转到状态 46


状态 32

   22 BlockItem: Stmt •

    $default  使用规则 22 以归约 (BlockItem)


状态 33

   23 Stmt: open_statement •

    $default  使用规则 23 以归约 (Stmt)


状态 34

   24 Stmt: closed_statement •

    $default  使用规则 24 以归约 (Stmt)


状态 35

   31 closed_statement: Exp • ';'

    ';'  偏移，并进入状态 60


状态 36

   30 closed_statement: LVal • '=' Exp ';'
   40 PrimaryExp: LVal •

    '='  偏移，并进入状态 61

    $default  使用规则 40 以归约 (PrimaryExp)


状态 37

   43 UnaryExp: PrimaryExp •

    $default  使用规则 43 以归约 (UnaryExp)


状态 38

   41 PrimaryExp: Number •

    $default  使用规则 41 以归约 (PrimaryExp)


状态 39

   48 MulExp: UnaryExp •

    $default  使用规则 48 以归约 (MulExp)


状态 40

   44 UnaryExp: UnaryOp • UnaryExp

    IDENT      偏移，并进入状态 18
    INT_CONST  偏移，并进入状态 19
    '('        偏移，并进入状态 21
    '+'        偏移，并进入状态 22
    '-'        偏移，并进入状态 23
    '!'        偏移，并进入状态 24

    LVal        转到状态 48
    PrimaryExp  转到状态 37
    Number      转到状态 38
    UnaryExp    转到状态 62
    UnaryOp     转到状态 40


状态 41

   49 MulExp: MulExp • '*' UnaryExp
   50       | MulExp • '/' UnaryExp
   51       | MulExp • '%' UnaryExp
   52 AddExp: MulExp •

    '*'  偏移，并进入状态 63
    '/'  偏移，并进入状态 64
    '%'  偏移，并进入状态 65

    $default  使用规则 52 以归约 (AddExp)


状态 42

   53 AddExp: AddExp • '+' MulExp
   54       | AddExp • '-' MulExp
   55 RelExp: AddExp •

    '+'  偏移，并进入状态 66
    '-'  偏移，并进入状态 67

    $default  使用规则 55 以归约 (RelExp)


状态 43

   56 RelExp: RelExp • '<' AddExp
   57       | RelExp • '>' AddExp
   58       | RelExp • LE AddExp
   59       | RelExp • GE AddExp
   60 EqExp: RelExp •

    LE   偏移，并进入状态 68
    GE   偏移，并进入状态 69
    '<'  偏移，并进入状态 70
    '>'  偏移，并进入状态 71

    $default  使用规则 60 以归约 (EqExp)


状态 44

   61 EqExp: EqExp • EQ RelExp
   62      | EqExp • NE RelExp
   63 LAndExp: EqExp •

    EQ  偏移，并进入状态 72
    NE  偏移，并进入状态 73

    $default  使用规则 63 以归约 (LAndExp)


状态 45

   64 LAndExp: LAndExp • AND EqExp
   65 LOrExp: LAndExp •

    AND  偏移，并进入状态 74

    $default  使用规则 65 以归约 (LOrExp)


状态 46

   37 Exp: LOrExp •
   66 LOrExp: LOrExp • OR LAndExp

    OR  偏移，并进入状态 75

    $default  使用规则 37 以归约 (Exp)


状态 47

   34 closed_statement: RETURN Exp • ';'

    ';'  偏移，并进入状态 76


状态 48

   40 PrimaryExp: LVal •

    $default  使用规则 40 以归约 (PrimaryExp)


状态 49

    4 ConstDecl: CONST BType • ConstDefList ';'

    IDENT  偏移，并进入状态 77

    ConstDefList  转到状态 78
    ConstDef      转到状态 79


状态 50

   25 open_statement: IF '(' • Exp ')' Stmt
   26               | IF '(' • Exp ')' closed_statement ELSE open_statement
   28 closed_statement: IF '(' • Exp ')' closed_statement ELSE closed_statement

    IDENT      偏移，并进入状态 18
    INT_CONST  偏移，并进入状态 19
    '('        偏移，并进入状态 21
    '+'        偏移，并进入状态 22
    '-'        偏移，并进入状态 23
    '!'        偏移，并进入状态 24

    Exp         转到状态 80
    LVal        转到状态 48
    PrimaryExp  转到状态 37
    Number      转到状态 38
    UnaryExp    转到状态 39
    UnaryOp     转到状态 40
    MulExp      转到状态 41
    AddExp      转到状态 42
    RelExp      转到状态 43
    EqExp       转到状态 44
    LAndExp     转到状态 45
    LOrExp      转到状态 46


状态 51

   27 open_statement: WHILE '(' • Exp ')' open_statement
   29 closed_statement: WHILE '(' • Exp ')' closed_statement

    IDENT      偏移，并进入状态 18
    INT_CONST  偏移，并进入状态 19
    '('        偏移，并进入状态 21
    '+'        偏移，并进入状态 22
    '-'        偏移，并进入状态 23
    '!'        偏移，并进入状态 24

    Exp         转到状态 81
    LVal        转到状态 48
    PrimaryExp  转到状态 37
    Number      转到状态 38
    UnaryExp    转到状态 39
    UnaryOp     转到状态 40
    MulExp      转到状态 41
    AddExp      转到状态 42
    RelExp      转到状态 43
    EqExp       转到状态 44
    LAndExp     转到状态 45
    LOrExp      转到状态 46


状态 52

   36 closed_statement: CONTINUE ';' •

    $default  使用规则 36 以归约 (closed_statement)


状态 53

   35 closed_statement: BREAK ';' •

    $default  使用规则 35 以归约 (closed_statement)


状态 54

   39 PrimaryExp: '(' Exp • ')'

    ')'  偏移，并进入状态 82


状态 55

   13 VarDef: IDENT •
   14       | IDENT • '=' InitVal

    '='  偏移，并进入状态 83

    $default  使用规则 13 以归约 (VarDef)


状态 56

   10 VarDecl: BType VarDefList • ';'

    ';'  偏移，并进入状态 84


状态 57

   11 VarDefList: VarDef •
   12           | VarDef • ',' VarDefList

    ','  偏移，并进入状态 85

    $default  使用规则 11 以归约 (VarDefList)


状态 58

   18 Block: '{' BlockItemList '}' •

    $default  使用规则 18 以归约 (Block)


状态 59

   20 BlockItemList: BlockItem BlockItemList •

    $default  使用规则 20 以归约 (BlockItemList)


状态 60

   31 closed_statement: Exp ';' •

    $default  使用规则 31 以归约 (closed_statement)


状态 61

   30 closed_statement: LVal '=' • Exp ';'

    IDENT      偏移，并进入状态 18
    INT_CONST  偏移，并进入状态 19
    '('        偏移，并进入状态 21
    '+'        偏移，并进入状态 22
    '-'        偏移，并进入状态 23
    '!'        偏移，并进入状态 24

    Exp         转到状态 86
    LVal        转到状态 48
    PrimaryExp  转到状态 37
    Number      转到状态 38
    UnaryExp    转到状态 39
    UnaryOp     转到状态 40
    MulExp      转到状态 41
    AddExp      转到状态 42
    RelExp      转到状态 43
    EqExp       转到状态 44
    LAndExp     转到状态 45
    LOrExp      转到状态 46


状态 62

   44 UnaryExp: UnaryOp UnaryExp •

    $default  使用规则 44 以归约 (UnaryExp)


状态 63

   49 MulExp: MulExp '*' • UnaryExp

    IDENT      偏移，并进入状态 18
    INT_CONST  偏移，并进入状态 19
    '('        偏移，并进入状态 21
    '+'        偏移，并进入状态 22
    '-'        偏移，并进入状态 23
    '!'        偏移，并进入状态 24

    LVal        转到状态 48
    PrimaryExp  转到状态 37
    Number      转到状态 38
    UnaryExp    转到状态 87
    UnaryOp     转到状态 40


状态 64

   50 MulExp: MulExp '/' • UnaryExp

    IDENT      偏移，并进入状态 18
    INT_CONST  偏移，并进入状态 19
    '('        偏移，并进入状态 21
    '+'        偏移，并进入状态 22
    '-'        偏移，并进入状态 23
    '!'        偏移，并进入状态 24

    LVal        转到状态 48
    PrimaryExp  转到状态 37
    Number      转到状态 38
    UnaryExp    转到状态 88
    UnaryOp     转到状态 40


状态 65

   51 MulExp: MulExp '%' • UnaryExp

    IDENT      偏移，并进入状态 18
    INT_CONST  偏移，并进入状态 19
    '('        偏移，并进入状态 21
    '+'        偏移，并进入状态 22
    '-'        偏移，并进入状态 23
    '!'        偏移，并进入状态 24

    LVal        转到状态 48
    PrimaryExp  转到状态 37
    Number      转到状态 38
    UnaryExp    转到状态 89
    UnaryOp     转到状态 40


状态 66

   53 AddExp: AddExp '+' • MulExp

    IDENT      偏移，并进入状态 18
    INT_CONST  偏移，并进入状态 19
    '('        偏移，并进入状态 21
    '+'        偏移，并进入状态 22
    '-'        偏移，并进入状态 23
    '!'        偏移，并进入状态 24

    LVal        转到状态 48
    PrimaryExp  转到状态 37
    Number      转到状态 38
    UnaryExp    转到状态 39
    UnaryOp     转到状态 40
    MulExp      转到状态 90


状态 67

   54 AddExp: AddExp '-' • MulExp

    IDENT      偏移，并进入状态 18
    INT_CONST  偏移，并进入状态 19
    '('        偏移，并进入状态 21
    '+'        偏移，并进入状态 22
    '-'        偏移，并进入状态 23
    '!'        偏移，并进入状态 24

    LVal        转到状态 48
    PrimaryExp  转到状态 37
    Number      转到状态 38
    UnaryExp    转到状态 39
    UnaryOp     转到状态 40
    MulExp      转到状态 91


状态 68

   58 RelExp: RelExp LE • AddExp

    IDENT      偏移，并进入状态 18
    INT_CONST  偏移，并进入状态 19
    '('        偏移，并进入状态 21
    '+'        偏移，并进入状态 22
    '-'        偏移，并进入状态 23
    '!'        偏移，并进入状态 24

    LVal        转到状态 48
    PrimaryExp  转到状态 37
    Number      转到状态 38
    UnaryExp    转到状态 39
    UnaryOp     转到状态 40
    MulExp      转到状态 41
    AddExp      转到状态 92


状态 69

   59 RelExp: RelExp GE • AddExp

    IDENT      偏移，并进入状态 18
    INT_CONST  偏移，并进入状态 19
    '('        偏移，并进入状态 21
    '+'        偏移，并进入状态 22
    '-'        偏移，并进入状态 23
    '!'        偏移，并进入状态 24

    LVal        转到状态 48
    PrimaryExp  转到状态 37
    Number      转到状态 38
    UnaryExp    转到状态 39
    UnaryOp     转到状态 40
    MulExp      转到状态 41
    AddExp      转到状态 93


状态 70

   56 RelExp: RelExp '<' • AddExp

    IDENT      偏移，并进入状态 18
    INT_CONST  偏移，并进入状态 19
    '('        偏移，并进入状态 21
    '+'        偏移，并进入状态 22
    '-'        偏移，并进入状态 23
    '!'        偏移，并进入状态 24

    LVal        转到状态 48
    PrimaryExp  转到状态 37
    Number      转到状态 38
    UnaryExp    转到状态 39
    UnaryOp     转到状态 40
    MulExp      转到状态 41
    AddExp      转到状态 94


状态 71

   57 RelExp: RelExp '>' • AddExp

    IDENT      偏移，并进入状态 18
    INT_CONST  偏移，并进入状态 19
    '('        偏移，并进入状态 21
    '+'        偏移，并进入状态 22
    '-'        偏移，并进入状态 23
    '!'        偏移，并进入状态 24

    LVal        转到状态 48
    PrimaryExp  转到状态 37
    Number      转到状态 38
    UnaryExp    转到状态 39
    UnaryOp     转到状态 40
    MulExp      转到状态 41
    AddExp      转到状态 95


状态 72

   61 EqExp: EqExp EQ • RelExp

    IDENT      偏移，并进入状态 18
    INT_CONST  偏移，并进入状态 19
    '('        偏移，并进入状态 21
    '+'        偏移，并进入状态 22
    '-'        偏移，并进入状态 23
    '!'        偏移，并进入状态 24

    LVal        转到状态 48
    PrimaryExp  转到状态 37
    Number      转到状态 38
    UnaryExp    转到状态 39
    UnaryOp     转到状态 40
    MulExp      转到状态 41
    AddExp      转到状态 42
    RelExp      转到状态 96


状态 73

   62 EqExp: EqExp NE • RelExp

    IDENT      偏移，并进入状态 18
    INT_CONST  偏移，并进入状态 19
    '('        偏移，并进入状态 21
    '+'        偏移，并进入状态 22
    '-'        偏移，并进入状态 23
    '!'        偏移，并进入状态 24

    LVal        转到状态 48
    PrimaryExp  转到状态 37
    Number      转到状态 38
    UnaryExp    转到状态 39
    UnaryOp     转到状态 40
    MulExp      转到状态 41
    AddExp      转到状态 42
    RelExp      转到状态 97


状态 74

   64 LAndExp: LAndExp AND • EqExp

    IDENT      偏移，并进入状态 18
    INT_CONST  偏移，并进入状态 19
    '('        偏移，并进入状态 21
    '+'        偏移，并进入状态 22
    '-'        偏移，并进入状态 23
    '!'        偏移，并进入状态 24

    LVal        转到状态 48
    PrimaryExp  转到状态 37
    Number      转到状态 38
    UnaryExp    转到状态 39
    UnaryOp     转到状态 40
    MulExp      转到状态 41
    AddExp      转到状态 42
    RelExp      转到状态 43
    EqExp       转到状态 98


状态 75

   66 LOrExp: LOrExp OR • LAndExp

    IDENT      偏移，并进入状态 18
    INT_CONST  偏移，并进入状态 19
    '('        偏移，并进入状态 21
    '+'        偏移，并进入状态 22
    '-'        偏移，并进入状态 23
    '!'        偏移，并进入状态 24

    LVal        转到状态 48
    PrimaryExp  转到状态 37
    Number      转到状态 38
    UnaryExp    转到状态 39
    UnaryOp     转到状态 40
    MulExp      转到状态 41
    AddExp      转到状态 42
    RelExp      转到状态 43
    EqExp       转到状态 44
    LAndExp     转到状态 99


状态 76

   34 closed_statement: RETURN Exp ';' •

    $default  使用规则 34 以归约 (closed_statement)


状态 77

    8 ConstDef: IDENT • '=' ConstInitVal

    '='  偏移，并进入状态 100


状态 78

    4 ConstDecl: CONST BType ConstDefList • ';'

    ';'  偏移，并进入状态 101


状态 79

    5 ConstDefList: ConstDef •
    6             | ConstDef • ',' ConstDefList

    ','  偏移，并进入状态 102

    $default  使用规则 5 以归约 (ConstDefList)


状态 80

   25 open_statement: IF '(' Exp • ')' Stmt
   26               | IF '(' Exp • ')' closed_statement ELSE open_statement
   28 closed_statement: IF '(' Exp • ')' closed_statement ELSE closed_statement

    ')'  偏移，并进入状态 103


状态 81

   27 open_statement: WHILE '(' Exp • ')' open_statement
   29 closed_statement: WHILE '(' Exp • ')' closed_statement

    ')'  偏移，并进入状态 104


状态 82

   39 PrimaryExp: '(' Exp ')' •

    $default  使用规则 39 以归约 (PrimaryExp)


状态 83

   14 VarDef: IDENT '=' • InitVal

    IDENT      偏移，并进入状态 18
    INT_CONST  偏移，并进入状态 19
    '('        偏移，并进入状态 21
    '+'        偏移，并进入状态 22
    '-'        偏移，并进入状态 23
    '!'        偏移，并进入状态 24

    InitVal     转到状态 105
    Exp         转到状态 106
    LVal        转到状态 48
    PrimaryExp  转到状态 37
    Number      转到状态 38
    UnaryExp    转到状态 39
    UnaryOp     转到状态 40
    MulExp      转到状态 41
    AddExp      转到状态 42
    RelExp      转到状态 43
    EqExp       转到状态 44
    LAndExp     转到状态 45
    LOrExp      转到状态 46


状态 84

   10 VarDecl: BType VarDefList ';' •

    $default  使用规则 10 以归约 (VarDecl)


状态 85

   12 VarDefList: VarDef ',' • VarDefList

    IDENT  偏移，并进入状态 55

    VarDefList  转到状态 107
    VarDef      转到状态 57


状态 86

   30 closed_statement: LVal '=' Exp • ';'

    ';'  偏移，并进入状态 108


状态 87

   49 MulExp: MulExp '*' UnaryExp •

    $default  使用规则 49 以归约 (MulExp)


状态 88

   50 MulExp: MulExp '/' UnaryExp •

    $default  使用规则 50 以归约 (MulExp)


状态 89

   51 MulExp: MulExp '%' UnaryExp •

    $default  使用规则 51 以归约 (MulExp)


状态 90

   49 MulExp: MulExp • '*' UnaryExp
   50       | MulExp • '/' UnaryExp
   51       | MulExp • '%' UnaryExp
   53 AddExp: AddExp '+' MulExp •

    '*'  偏移，并进入状态 63
    '/'  偏移，并进入状态 64
    '%'  偏移，并进入状态 65

    $default  使用规则 53 以归约 (AddExp)


状态 91

   49 MulExp: MulExp • '*' UnaryExp
   50       | MulExp • '/' UnaryExp
   51       | MulExp • '%' UnaryExp
   54 AddExp: AddExp '-' MulExp •

    '*'  偏移，并进入状态 63
    '/'  偏移，并进入状态 64
    '%'  偏移，并进入状态 65

    $default  使用规则 54 以归约 (AddExp)


状态 92

   53 AddExp: AddExp • '+' MulExp
   54       | AddExp • '-' MulExp
   58 RelExp: RelExp LE AddExp •

    '+'  偏移，并进入状态 66
    '-'  偏移，并进入状态 67

    $default  使用规则 58 以归约 (RelExp)


状态 93

   53 AddExp: AddExp • '+' MulExp
   54       | AddExp • '-' MulExp
   59 RelExp: RelExp GE AddExp •

    '+'  偏移，并进入状态 66
    '-'  偏移，并进入状态 67

    $default  使用规则 59 以归约 (RelExp)


状态 94

   53 AddExp: AddExp • '+' MulExp
   54       | AddExp • '-' MulExp
   56 RelExp: RelExp '<' AddExp •

    '+'  偏移，并进入状态 66
    '-'  偏移，并进入状态 67

    $default  使用规则 56 以归约 (RelExp)


状态 95

   53 AddExp: AddExp • '+' MulExp
   54       | AddExp • '-' MulExp
   57 RelExp: RelExp '>' AddExp •

    '+'  偏移，并进入状态 66
    '-'  偏移，并进入状态 67

    $default  使用规则 57 以归约 (RelExp)


状态 96

   56 RelExp: RelExp • '<' AddExp
   57       | RelExp • '>' AddExp
   58       | RelExp • LE AddExp
   59       | RelExp • GE AddExp
   61 EqExp: EqExp EQ RelExp •

    LE   偏移，并进入状态 68
    GE   偏移，并进入状态 69
    '<'  偏移，并进入状态 70
    '>'  偏移，并进入状态 71

    $default  使用规则 61 以归约 (EqExp)


状态 97

   56 RelExp: RelExp • '<' AddExp
   57       | RelExp • '>' AddExp
   58       | RelExp • LE AddExp
   59       | RelExp • GE AddExp
   62 EqExp: EqExp NE RelExp •

    LE   偏移，并进入状态 68
    GE   偏移，并进入状态 69
    '<'  偏移，并进入状态 70
    '>'  偏移，并进入状态 71

    $default  使用规则 62 以归约 (EqExp)


状态 98

   61 EqExp: EqExp • EQ RelExp
   62      | EqExp • NE RelExp
   64 LAndExp: LAndExp AND EqExp •

    EQ  偏移，并进入状态 72
    NE  偏移，并进入状态 73

    $default  使用规则 64 以归约 (LAndExp)


状态 99

   64 LAndExp: LAndExp • AND EqExp
   66 LOrExp: LOrExp OR LAndExp •

    AND  偏移，并进入状态 74

    $default  使用规则 66 以归约 (LOrExp)


状态 100

    8 ConstDef: IDENT '=' • ConstInitVal

    IDENT      偏移，并进入状态 18
    INT_CONST  偏移，并进入状态 19
    '('        偏移，并进入状态 21
    '+'        偏移，并进入状态 22
    '-'        偏移，并进入状态 23
    '!'        偏移，并进入状态 24

    ConstInitVal  转到状态 109
    Exp           转到状态 110
    LVal          转到状态 48
    PrimaryExp    转到状态 37
    Number        转到状态 38
    UnaryExp      转到状态 39
    UnaryOp       转到状态 40
    MulExp        转到状态 41
    AddExp        转到状态 42
    RelExp        转到状态 43
    EqExp         转到状态 44
    LAndExp       转到状态 45
    LOrExp        转到状态 46
    ConstExp      转到状态 111


状态 101

    4 ConstDecl: CONST BType ConstDefList ';' •

    $default  使用规则 4 以归约 (ConstDecl)


状态 102

    6 ConstDefList: ConstDef ',' • ConstDefList

    IDENT  偏移，并进入状态 77

    ConstDefList  转到状态 112
    ConstDef      转到状态 79


状态 103

   25 open_statement: IF '(' Exp ')' • Stmt
   26               | IF '(' Exp ')' • closed_statement ELSE open_statement
   28 closed_statement: IF '(' Exp ')' • closed_statement ELSE closed_statement

    RETURN     偏移，并进入状态 12
    IF         偏移，并进入状态 14
    WHILE      偏移，并进入状态 15
    CONTINUE   偏移，并进入状态 16
    BREAK      偏移，并进入状态 17
    IDENT      偏移，并进入状态 18
    INT_CONST  偏移，并进入状态 19
    ';'        偏移，并进入状态 20
    '('        偏移，并进入状态 21
    '{'        偏移，并进入状态 9
    '+'        偏移，并进入状态 22
    '-'        偏移，并进入状态 23
    '!'        偏移，并进入状态 24

    Block             转到状态 29
    Stmt              转到状态 113
    open_statement    转到状态 33
    closed_statement  转到状态 114
    Exp               转到状态 35
    LVal              转到状态 36
    PrimaryExp        转到状态 37
    Number            转到状态 38
    UnaryExp          转到状态 39
    UnaryOp           转到状态 40
    MulExp            转到状态 41
    AddExp            转到状态 42
    RelExp            转到状态 43
    EqExp             转到状态 44
    LAndExp           转到状态 45
    LOrExp            转到状态 46


状态 104

   27 open_statement: WHILE '(' Exp ')' • open_statement
   29 closed_statement: WHILE '(' Exp ')' • closed_statement

    RETURN     偏移，并进入状态 12
    IF         偏移，并进入状态 14
    WHILE      偏移，并进入状态 15
    CONTINUE   偏移，并进入状态 16
    BREAK      偏移，并进入状态 17
    IDENT      偏移，并进入状态 18
    INT_CONST  偏移，并进入状态 19
    ';'        偏移，并进入状态 20
    '('        偏移，并进入状态 21
    '{'        偏移，并进入状态 9
    '+'        偏移，并进入状态 22
    '-'        偏移，并进入状态 23
    '!'        偏移，并进入状态 24

    Block             转到状态 29
    open_statement    转到状态 115
    closed_statement  转到状态 116
    Exp               转到状态 35
    LVal              转到状态 36
    PrimaryExp        转到状态 37
    Number            转到状态 38
    UnaryExp          转到状态 39
    UnaryOp           转到状态 40
    MulExp            转到状态 41
    AddExp            转到状态 42
    RelExp            转到状态 43
    EqExp             转到状态 44
    LAndExp           转到状态 45
    LOrExp            转到状态 46


状态 105

   14 VarDef: IDENT '=' InitVal •

    $default  使用规则 14 以归约 (VarDef)


状态 106

   15 InitVal: Exp •

    $default  使用规则 15 以归约 (InitVal)


状态 107

   12 VarDefList: VarDef ',' VarDefList •

    $default  使用规则 12 以归约 (VarDefList)


状态 108

   30 closed_statement: LVal '=' Exp ';' •

    $default  使用规则 30 以归约 (closed_statement)


状态 109

    8 ConstDef: IDENT '=' ConstInitVal •

    $default  使用规则 8 以归约 (ConstDef)


状态 110

   67 ConstExp: Exp •

    $default  使用规则 67 以归约 (ConstExp)


状态 111

    9 ConstInitVal: ConstExp •

    $default  使用规则 9 以归约 (ConstInitVal)


状态 112

    6 ConstDefList: ConstDef ',' ConstDefList •

    $default  使用规则 6 以归约 (ConstDefList)


状态 113

   25 open_statement: IF '(' Exp ')' Stmt •

    $default  使用规则 25 以归约 (open_statement)


状态 114

   24 Stmt: closed_statement •
   26 open_statement: IF '(' Exp ')' closed_statement • ELSE open_statement
   28 closed_statement: IF '(' Exp ')' closed_statement • ELSE closed_statement

    ELSE  偏移，并进入状态 117

    $default  使用规则 24 以归约 (Stmt)


状态 115

   27 open_statement: WHILE '(' Exp ')' open_statement •

    $default  使用规则 27 以归约 (open_statement)


状态 116

   29 closed_statement: WHILE '(' Exp ')' closed_statement •

    $default  使用规则 29 以归约 (closed_statement)


状态 117

   26 open_statement: IF '(' Exp ')' closed_statement ELSE • open_statement
   28 closed_statement: IF '(' Exp ')' closed_statement ELSE • closed_statement

    RETURN     偏移，并进入状态 12
    IF         偏移，并进入状态 14
    WHILE      偏移，并进入状态 15
    CONTINUE   偏移，并进入状态 16
    BREAK      偏移，并进入状态 17
    IDENT      偏移，并进入状态 18
    INT_CONST  偏移，并进入状态 19
    ';'        偏移，并进入状态 20
    '('        偏移，并进入状态 21
    '{'        偏移，并进入状态 9
    '+'        偏移，并进入状态 22
    '-'        偏移，并进入状态 23
    '!'        偏移，并进入状态 24

    Block             转到状态 29
    open_statement    转到状态 118
    closed_statement  转到状态 119
    Exp               转到状态 35
    LVal              转到状态 36
    PrimaryExp        转到状态 37
    Number            转到状态 38
    UnaryExp          转到状态 39
    UnaryOp           转到状态 40
    MulExp            转到状态 41
    AddExp            转到状态 42
    RelExp            转到状态 43
    EqExp             转到状态 44
    LAndExp           转到状态 45
    LOrExp            转到状态 46


状态 118

   26 open_statement: IF '(' Exp ')' closed_statement ELSE open_statement •

    $default  使用规则 26 以归约 (open_statement)


状态 119

   28 closed_statement: IF '(' Exp ')' closed_statement ELSE closed_statement •

    $default  使用规则 28 以归约 (closed_statement)
